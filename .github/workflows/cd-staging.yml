name: CD Staging Workflow

on:
  push:
    branches:
      - development
  pull_request:
    branches:
      - development

jobs:
    build-staging:
        # runs on the development branch
        if: ${{ github.ref == 'refs/heads/development' }}
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v2

            - name: Set up Python
              uses: actions/setup-python@v2
              with:
                python-version: '3.8'

            - name: Install dependencies
              run: |
                python -m pip install --upgrade pip
                pip install -r requirements.txt

    # Job to deploy to staging environment
    deploy-staging:
        # runs on the development branch
        if: ${{ github.ref == 'refs/heads/development' }}
        runs-on: ubuntu-latest
        needs: build-staging
        steps:
          - name: Checkout code
            uses: actions/checkout@v3

          # Skeleton step for downloading test results
          
          # Uncomment and configure the following steps if you want to download test results as artifacts
          # - name: Download test results
          #   uses: actions/download-artifact@v3
          #   with:
          #     name: test-results
          #     path: core/tests/test-results

          # Deploy via Render Deploy Hook
          - name: Trigger Render Deploy Hook (Staging)
            env:
              RENDER_DEPLOY_HOOK_URL: ${{ secrets.RENDER_DEV_DEPLOY_HOOK_URL }}  # Use GitHub Secrets for secure deploy hook URL management
            run: |
              curl -X POST $RENDER_DEPLOY_HOOK_URL

    # Job to run integration tests on the deployed staging environment
    integration-test:
        # runs on the development branch
        if: ${{ github.ref == 'refs/heads/development' }}
        runs-on: ubuntu-latest
        needs: deploy-staging
        steps:
          - name: Run integration tests
            run: |
              echo "======================================"
              echo "Running Integration Tests"
              echo "Running Regression Tests"
              echo "======================================"
              echo 'Integration tests complete'

      # Job to auto-delete feature branches
    auto-delete-feature-branch:
        needs: integration-test
        if: ${{ github.event.pull_request.merged == true && startsWith(github.event.pull_request.head.ref, 'feature/') }}
        runs-on: ubuntu-latest
        steps:
          - name: Delete Feature Branch
            env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            run: |
              branch=${{ github.event.pull_request.head.ref }}
              repo=${{ github.repository }}
              echo "Deleting branch $branch from $repo..."
              curl -X DELETE \
                -H "Authorization: token $GITHUB_TOKEN" \
                -H "Accept: application/vnd.github.v3+json" \
                https://api.github.com/repos/$repo/git/refs/heads/$branch