name: CI Workflow

# Summary:
# This workflow is triggered on pull requests to the main and development branches.
# It consists of four jobs:
# 1. Lint:
#    - Checks out the code.
#    - Sets up Python 3.9.
#    - Installs dependencies.
#    - Runs flake8 to check code style and formatting.
# 2. Security Scan:
#    - Runs only if the lint job succeeds.
#    - Checks out the code.
#    - Sets up Python 3.9.
#    - Installs dependencies.
#    - Runs Bandit for security scanning.
# 3. Build:
#    - Runs only if the security scan job succeeds.
#    - Checks out the code.
#    - Sets up Python 3.9.
#    - Installs dependencies.
#    - Builds the project.
# 4. Test:
#    - Runs only if the lint, security scan, and build jobs succeed.
#    - Checks out the code.
#    - Sets up Python 3.9.
#    - Installs dependencies.
#    - Runs unit tests.
#    - Optionally uploads test results as artifacts.

on:

  pull_request:
    branches:
      - main
      - development

jobs:
  # Job to check code style and formatting
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8

      - name: Run flake8
        run: flake8 .

  # Job to perform security scanning
  security-scan:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install bandit

      - name: Run Bandit security scan
        run: bandit -r .

  # Job to build the project
  build:
    runs-on: ubuntu-latest
    needs: security-scan
    env:
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Build project
        run: ./build.sh

  # Job to run unit tests
  test:
    runs-on: ubuntu-latest
    needs: 
      - build
      - security-scan
      - lint
    env:
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run unit tests
        run: |
          echo "======================================"
          echo "Running unit tests"
          echo "Running Feature Tests"
          echo "======================================"
          python manage.py test core.tests

      # Skeleton step for uploading test results
      # Uncomment and configure the following steps if you want to upload test results as artifacts
      # - name: Upload test results
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: test-results
      #     path: core/tests/test-results