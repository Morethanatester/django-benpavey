name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - development
  pull_request:
    branches:
      - main
      - development

jobs:
  # Job to check code style and formatting
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8

      - name: Run flake8
        run: flake8 .

  # Job to run unit tests
  test:
    runs-on: ubuntu-latest
    needs: lint
    env:
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      DEBUG: 'True'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run unit tests
        run: python manage.py test core.tests

  # Job to deploy to development environment
  deploy-dev:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/development' || (github.event_name == 'pull_request' && github.base_ref == 'development')
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Deploy via Render Deploy Hook
      - name: Trigger Render Deploy Hook (Development)
        env:
          RENDER_DEPLOY_HOOK_URL: ${{ secrets.RENDER_DEV_DEPLOY_HOOK_URL }}  # Use GitHub Secrets for secure deploy hook URL management
        run: |
          curl -X POST $RENDER_DEPLOY_HOOK_URL

      - name: Notify successful deployment to development
        if: success()
        run: echo "Deployment to the development environment was successful."

      - name: Notify skipped deployment to development
        if: failure()
        run: echo "Deployment to the development environment was skipped because the tests did not pass."

  # Job to run integration tests on the deployed development environment
  integration-test:
    runs-on: ubuntu-latest
    needs: deploy-dev
    if: github.ref == 'refs/heads/development' || (github.event_name == 'pull_request' && github.base_ref == 'development')
    steps:
      - name: Run integration tests
        run: echo 'Integration tests complete'

      - name: Notify skipped integration tests
        if: failure()
        run: echo "Integration tests were skipped because the deployment to development did not succeed."

  # Job to deploy to production environment
  deploy-prod:
    runs-on: ubuntu-latest
    needs: [test, integration-test]
    if: github.ref == 'refs/heads/main' || (github.event_name == 'pull_request' && github.base_ref == 'main')
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Deploy via Render Deploy Hook
      - name: Trigger Render Deploy Hook (Production)
        env:
          RENDER_DEPLOY_HOOK_URL: ${{ secrets.RENDER_PROD_DEPLOY_HOOK_URL }}  # Use GitHub Secrets for secure deploy hook URL management
        run: |
          curl -X POST $RENDER_DEPLOY_HOOK_URL

      - name: Notify successful deployment to production
        if: success()
        run: echo "Deployment to the production environment was successful."

      - name: Notify skipped deployment to production
        if: failure()
        run: echo "Deployment to the production environment was skipped because the tests or integration tests did not pass."

  # Job to notify why a job was skipped
  skip-notification:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && (github.base_ref != 'development' && github.base_ref != 'main')
    steps:
      - name: Notify why job was skipped
        run: echo "This job was skipped because the pull request is not targeting the 'development' or 'main' branch."