name: Django CI

on:
  push:
    branches: [ "main", "pre-prod", "dev" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.9]

    steps:
    - uses: actions/checkout@v4
      with:
        persist-credentials: false
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Run Tests
      run: |
        python manage.py test core.tests 

  push-to-pre-prod:
    runs-on: ubuntu-latest
    needs: build
    if: ${{ github.ref == 'refs/heads/dev' && success() }}
    steps:
    - name: Set up Git
      run: |
        git config --global user.name '${{ secrets.GH_USERNAME }}'
        git config --global user.email '${{ secrets.GH_EMAIL }}'
    - name: Push to Pre-Prod
      env:
        GH_TOKEN: ${{ secrets.PAT }}
      run: |
        git fetch origin
        git checkout pre-prod
        git merge dev --no-ff -m "Merging changes from dev to pre-prod"
        git remote set-url origin https://x-access-token:${{ secrets.PAT }}@github.com/${{ github.repository }}.git
        git push origin pre-prod

  push-to-main:
    runs-on: ubuntu-latest
    needs: push-to-pre-prod
    if: ${{ github.ref == 'refs/heads/dev' && success() }}
    steps:
    - name: Set up Git
      run: |
        git config --global user.name '${{ secrets.GH_USERNAME }}'
        git config --global user.email '${{ secrets.GH_EMAIL }}'
    - name: Push to Main
      env:
        GH_TOKEN: ${{ secrets.PAT }}
      run: |
        git fetch origin
        git checkout main
        git merge pre-prod --no-ff -m "Merging changes from pre-prod to main"
        git remote set-url origin https://x-access-token:${{ secrets.PAT }}@github.com/${{ github.repository }}.git
        git push origin main
